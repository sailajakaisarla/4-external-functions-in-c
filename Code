//1-type
#include<stdio.h>
int scan();//fun_decl
int main()
{
    int n1=scan(),n2=scan();
    printf("%d",n1+n2);
    int n3=scan(),n4=scan();
    printf("%d",n3*n4);
}
int scan(){
    int n;
    scanf("%d",&n);
    return n;
}
//2-type

//3-type with i/p arguments and without return values
#include<stdio.h>
int scan();
void add(int,int); //fun_declara
void process();
int main(){
    process();
}
void process(){
    int num1=scan(),num2=scan();//fun_call
    add(num1,num2);
}
void add(int n1,int n2){
    printf("%d",n1+n2);//fun_defi
}
int scan(){
    int num;
    scanf("%d",&num);//fun_defi
    return num;
}

//4-type function with both return values and arguments
#include<stdio.h>
int scan();
int factorial(int); //fun_declara
int main(){
    int result=factorial(scan());
    printf("%d",result);
}
int factorial(int num){
    int fact=1;
    for(int itr=1;itr<=num;itr++){
        fact *= itr;
    }
    return fact;
}
int scan(){
    int num;
    scanf("%d",&num);//fun_defi
    return num;
}
